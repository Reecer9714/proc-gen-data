{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "action": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the action",
          "examples": ["Nick", "Stab", "Slash"],
          "default": "filename"
        },
        "cost": {
          "type": "integer",
          "description": "The relative cost of an action. This can be mapped to an AP cost or an enum like free, bonus, action, action+bonus",
          "examples": [0, 1, 2, 3],
          "default": 2,
          "minimum": 0
        },
        "display": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Display strings for the action",
          "examples": [
            "{user.name} nicks {target.name}",
            "{user.name} cuts {target.name}"
          ],
          "default": []
        },
        "target": {
          "$ref": "#/definitions/target"
        },
        "effects": {
          "$ref": "#/definitions/effects"
        },
        "params": {
          "$ref": "#/definitions/params"
        },
        "requires": {
          "type": "array",
          "description": "Requirements for the action",
          "items": {
            "type": "string"
          },
          "default": []
        }
      }
    },
    "target": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of target",
          "enum": ["single", "multiple", "area", "all"],
          "default": "single"
        },
        "faction": {
          "type": "string",
          "description": "Faction of target",
          "enum": ["enemy", "ally", "all", "self"],
          "default": "enemy"
        },
        "max_amount": {
          "type": "integer",
          "description": "Maximum amount of targets",
          "default": 1,
          "minimum": 1
        },
        "range": {
          "type": "object",
          "description": "Range of target",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of range",
              "enum": ["melee", "ranged"],
              "default": "melee"
            },
            "distance": {
              "type": "integer",
              "description": "Distance of target",
              "default": 5,
              "minimum": 0
            },
            "max_distance": {
              "type": "integer",
              "description": "Maximum distance of target",
              "default": 20,
              "minimum": 0
            }
          }
        },
        "shape": {
          "type": "object",
          "description": "Shape of target",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of shape",
              "enum": ["circle", "square", "cone", "line"],
              "default": "circle"
            },
            "radius": {
              "type": "integer",
              "description": "Radius of shape",
              "default": 5,
              "minimum": 0
            },
            "width": {
              "type": "integer",
              "description": "Width of shape",
              "default": 5,
              "minimum": 0
            },
            "height": {
              "type": "integer",
              "description": "Height of shape",
              "default": 5,
              "minimum": 0
            }
          }
        }
      }
    },
    "effect_base": {
      "type": "object",
      "properties": {
        "conditional": {
          "type": "array",
          "description": "Type of condition action",
          "default": [],
          "items": {
            "type": "string",
            "pattern": "(is|not):[a-zA-Z0-9]+"
          }
        }
      }
    },
    "effects": {
      "type": "array",
      "items": {
        "allOf": [
          {
            "oneOf": [
              {
                "$ref": "#/definitions/damage"
              },
              {
                "$ref": "#/definitions/inventory"
              },
              {
                "$ref": "#/definitions/condition"
              }
            ]
          },
          {
            "$ref": "#/definitions/effect_base"
          }
        ]
      }
    },
    "damage": {
      "type": "object",
      "required": ["id", "type", "amount"],
      "properties": {
        "id": {
          "const": "damage"
        },
        "type": {
          "type": "string",
          "description": "Type of damage"
        },
        "amount": {
          "description": "Amount of damage",
          "oneOf": [
            {
              "$ref": "#/definitions/param"
            },
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "type": "string",
              "examples": [
                "1d4",
                "1d6",
                "1d8",
                "1d10",
                "1d12",
                "1d20",
                "2d4",
                "2d6"
              ],
              "pattern": "^([0-9]+d[0-9]+(\\+[0-9]+)?)$"
            }
          ]
        },
        "duration": {
          "type": "integer",
          "description": "Duration of damage in turns",
          "default": 0,
          "minimum": 0
        }
      }
    },
    "condition": {
      "type": "object",
      "required": ["id", "type"],
      "properties": {
        "id": {
          "const": "condition"
        },
        "action": {
          "type": "string",
          "description": "Type of condition action",
          "enum": ["apply", "remove"],
          "default": "apply"
        },
        "type": {
          "type": "string",
          "description": "Type of condition",
          "examples": ["blinded", "charmed", "paralyzed"]
        },
        "duration": {
          "type": "integer",
          "description": "Duration of the condition in turns",
          "default": 0,
          "minimum": 0
        }
      }
    },
    "inventory": {
      "type": "object",
      "required": ["id", "action", "item"],
      "properties": {
        "id": {
          "type": "string",
          "const": "inventory"
        },
        "action": {
          "type": "string",
          "description": "Type of inventory action",
          "enum": ["add", "remove"]
        },
        "item": {
          "type": "string",
          "description": "ID of the item to be added or removed",
          "anyOf": [
            {
              "pattern": "^\\$self$"
            },
            {
              "pattern": "^([a-zA-Z0-9]+(\\.[a-zA-Z0-9]+)*)$"
            }
          ],
          "examples": [
            "$self",
            "equipment.potion.health",
            "equipment.scroll.fireball"
          ]
        }
      }
    },
    "param": {
      "type": "string",
      "pattern": "^\\$([a-zA-Z0-9_]+)$",
      "examples": ["$self"]
    },
    "params": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^([a-zA-Z0-9_]+)$": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ]
        }
      },
      "examples": ["$self"]
    },
    "equipment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the equipment",
          "examples": ["Sword", "Shield", "Bow"],
          "default": "filename"
        },
        "weight": {
          "type": "number",
          "description": "The relative weight of the equipment",
          "examples": [1.0, 2.5, 0.75],
          "default": 0
        },
        "value": {
          "type": "number",
          "description": "The relative of the equipment",
          "examples": [10, 50, 100],
          "default": 0
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Additonal properties are merged into the source action.",
            "required": ["id"],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the action",
                "pattern": "^([a-zA-Z0-9]+(\\.[a-zA-Z0-9]+)*)$",
                "examples": ["weapon.slash", "weapon.cleave"]
              },
              "params": {
                "$ref": "#/definitions/params"
              },
              "additionalEffects": {
                "$ref": "#/definitions/effects"
              }
            }
          },
          "description": "References to actions that can be performed with the equipment.",
          "default": []
        }
      }
    }
  }
}
